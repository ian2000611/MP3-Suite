#levels
#	ALL indicates that all messages should be logged.
#	CONFIG is a message level for static configuration messages.
#	FINE is a message level providing tracing information.
#	FINER indicates a fairly detailed tracing message.
#	FINEST indicates a highly detailed tracing message.
#	INFO is a message level for informational messages.
#	OFF is a special level that can be used to turn off logging.
#	SEVERE is a message level indicating a serious failure.
#	WARNING is a message level indicating a potential problem.

#formatters (java.util.logging.xxx)
#	simpleformatter		print a brief summary of the logrecord in a human readable format.
#	XMLFormatter		Format a LogRecord into a standard XML format.

#handlers (java.util.logging.xxx)
#	ConsoleHandler		This Handler publishes log records to System.err.
#	FileHandler		Simple file logging Handler.
#	MemoryHandler		Handler that buffers requests in a circular buffer in memory.
#	SocketHandler		Simple network logging Handler.
#	StreamHandler		Stream based logging Handler.
handlers=java.util.logging.FileHandler, java.util.logging.ConsoleHandler
	
# general level
.level=WARNING
	
# file handler
#java.util.logging.FileHandler.level specifies the default level for the Handler (defaults to Level.ALL).
#java.util.logging.FileHandler.filter specifies the name of a Filter class to use (defaults to no Filter).
#java.util.logging.FileHandler.formatter specifies the name of a Formatter class to use (defaults to java.util.logging.XMLFormatter)
#java.util.logging.FileHandler.encoding the name of the character set encoding to use (defaults to the default platform encoding).
#java.util.logging.FileHandler.limit specifies an approximate maximum amount to write (in bytes) to any one file. If this is zero, then there is no limit. (Defaults to no limit).
#java.util.logging.FileHandler.count specifies how many output files to cycle through (defaults to 1).
#java.util.logging.FileHandler.pattern specifies a pattern for generating the output file name. See below for details. (Defaults to "%h/java%u.log").
#java.util.logging.FileHandler.append specifies whether the FileHandler should append onto any existing files (defaults to false).

java.util.logging.FileHandler.pattern = ../log%g.log
java.util.logging.FileHandler.limit = 50000
java.util.logging.FileHandler.count = 1
java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter
	
# console handler
#java.util.logging.ConsoleHandler.level 	specifies the default level for the Handler (defaults to Level.INFO).
#java.util.logging.ConsoleHandler.filter 	specifies the name of a Filter class to use (defaults to no Filter).
#java.util.logging.ConsoleHandler.formatter	specifies the name of a Formatter class to use (defaults to java.util.logging.SimpleFormatter).
#java.util.logging.ConsoleHandler.encoding 	the name of the character set encoding to use (defaults to the default platform encoding).

java.util.logging.ConsoleHandler.level = FINEST
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter

